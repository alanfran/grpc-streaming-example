// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example/v1/example.proto

package example

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BigFile struct {
	// resource name, ex: "BigFiles/some-UUID"
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BigFile) Reset()         { *m = BigFile{} }
func (m *BigFile) String() string { return proto.CompactTextString(m) }
func (*BigFile) ProtoMessage()    {}
func (*BigFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_675067d883e506dc, []int{0}
}

func (m *BigFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BigFile.Unmarshal(m, b)
}
func (m *BigFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BigFile.Marshal(b, m, deterministic)
}
func (m *BigFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BigFile.Merge(m, src)
}
func (m *BigFile) XXX_Size() int {
	return xxx_messageInfo_BigFile.Size(m)
}
func (m *BigFile) XXX_DiscardUnknown() {
	xxx_messageInfo_BigFile.DiscardUnknown(m)
}

var xxx_messageInfo_BigFile proto.InternalMessageInfo

func (m *BigFile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateBigFileRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BigFileChunk         []byte   `protobuf:"bytes,2,opt,name=big_file_chunk,json=bigFileChunk,proto3" json:"big_file_chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBigFileRequest) Reset()         { *m = CreateBigFileRequest{} }
func (m *CreateBigFileRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBigFileRequest) ProtoMessage()    {}
func (*CreateBigFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_675067d883e506dc, []int{1}
}

func (m *CreateBigFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBigFileRequest.Unmarshal(m, b)
}
func (m *CreateBigFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBigFileRequest.Marshal(b, m, deterministic)
}
func (m *CreateBigFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBigFileRequest.Merge(m, src)
}
func (m *CreateBigFileRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBigFileRequest.Size(m)
}
func (m *CreateBigFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBigFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBigFileRequest proto.InternalMessageInfo

func (m *CreateBigFileRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateBigFileRequest) GetBigFileChunk() []byte {
	if m != nil {
		return m.BigFileChunk
	}
	return nil
}

type GetBigFileRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBigFileRequest) Reset()         { *m = GetBigFileRequest{} }
func (m *GetBigFileRequest) String() string { return proto.CompactTextString(m) }
func (*GetBigFileRequest) ProtoMessage()    {}
func (*GetBigFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_675067d883e506dc, []int{2}
}

func (m *GetBigFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBigFileRequest.Unmarshal(m, b)
}
func (m *GetBigFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBigFileRequest.Marshal(b, m, deterministic)
}
func (m *GetBigFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBigFileRequest.Merge(m, src)
}
func (m *GetBigFileRequest) XXX_Size() int {
	return xxx_messageInfo_GetBigFileRequest.Size(m)
}
func (m *GetBigFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBigFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBigFileRequest proto.InternalMessageInfo

func (m *GetBigFileRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetBigFileResponse struct {
	BigFileChunk         []byte   `protobuf:"bytes,1,opt,name=big_file_chunk,json=bigFileChunk,proto3" json:"big_file_chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBigFileResponse) Reset()         { *m = GetBigFileResponse{} }
func (m *GetBigFileResponse) String() string { return proto.CompactTextString(m) }
func (*GetBigFileResponse) ProtoMessage()    {}
func (*GetBigFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_675067d883e506dc, []int{3}
}

func (m *GetBigFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBigFileResponse.Unmarshal(m, b)
}
func (m *GetBigFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBigFileResponse.Marshal(b, m, deterministic)
}
func (m *GetBigFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBigFileResponse.Merge(m, src)
}
func (m *GetBigFileResponse) XXX_Size() int {
	return xxx_messageInfo_GetBigFileResponse.Size(m)
}
func (m *GetBigFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBigFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBigFileResponse proto.InternalMessageInfo

func (m *GetBigFileResponse) GetBigFileChunk() []byte {
	if m != nil {
		return m.BigFileChunk
	}
	return nil
}

func init() {
	proto.RegisterType((*BigFile)(nil), "example.v1.BigFile")
	proto.RegisterType((*CreateBigFileRequest)(nil), "example.v1.CreateBigFileRequest")
	proto.RegisterType((*GetBigFileRequest)(nil), "example.v1.GetBigFileRequest")
	proto.RegisterType((*GetBigFileResponse)(nil), "example.v1.GetBigFileResponse")
}

func init() { proto.RegisterFile("example/v1/example.proto", fileDescriptor_675067d883e506dc) }

var fileDescriptor_675067d883e506dc = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x41, 0x4b, 0x33, 0x31,
	0x10, 0x25, 0xe5, 0xe3, 0x2b, 0x0e, 0x55, 0x30, 0x55, 0x28, 0xd5, 0x4a, 0x09, 0x82, 0x45, 0xe8,
	0xc6, 0xea, 0x4d, 0xf1, 0x60, 0x8b, 0x7a, 0x95, 0x1e, 0x45, 0x28, 0xd9, 0x32, 0x4d, 0x63, 0x77,
	0x93, 0xb8, 0x49, 0x8b, 0x20, 0x5e, 0xfc, 0x0b, 0xfe, 0xb4, 0xfe, 0x05, 0x7f, 0x88, 0x6c, 0x77,
	0x4b, 0x2b, 0x5d, 0xf1, 0xf6, 0x92, 0x79, 0x93, 0x97, 0xf7, 0x66, 0xa0, 0x86, 0xaf, 0x22, 0xb6,
	0x11, 0xf2, 0x59, 0x87, 0xe7, 0x30, 0xb0, 0x89, 0xf1, 0x86, 0xc2, 0xf2, 0x38, 0xeb, 0xd4, 0x0f,
	0xa5, 0x31, 0x32, 0x42, 0x2e, 0xac, 0xe2, 0x42, 0x6b, 0xe3, 0x85, 0x57, 0x46, 0xbb, 0x8c, 0xc9,
	0x1a, 0x50, 0xee, 0x2a, 0x79, 0xa7, 0x22, 0xa4, 0x14, 0xfe, 0x69, 0x11, 0x63, 0x8d, 0x34, 0x49,
	0x6b, 0xab, 0xbf, 0xc0, 0xec, 0x01, 0xf6, 0x7a, 0x09, 0x0a, 0x8f, 0x39, 0xa9, 0x8f, 0x2f, 0x53,
	0x74, 0xbe, 0x88, 0x4b, 0x8f, 0x61, 0x27, 0x54, 0x72, 0x30, 0x52, 0x11, 0x0e, 0x86, 0xe3, 0xa9,
	0x9e, 0xd4, 0x4a, 0x4d, 0xd2, 0xaa, 0xf4, 0x2b, 0x61, 0xd6, 0xdb, 0x4b, 0xef, 0xd8, 0x09, 0xec,
	0xde, 0xa3, 0xff, 0xfb, 0x39, 0x76, 0x09, 0x74, 0x9d, 0xe8, 0xac, 0xd1, 0xae, 0x48, 0x84, 0x6c,
	0x8a, 0x9c, 0xcf, 0x09, 0x94, 0x6f, 0xb3, 0x08, 0xe8, 0x13, 0x6c, 0xff, 0xb0, 0x40, 0x9b, 0xc1,
	0x2a, 0x9d, 0xa0, 0xc8, 0x5d, 0xbd, 0xba, 0xce, 0xc8, 0x6b, 0x8c, 0x7e, 0xcc, 0xbf, 0x3e, 0x4b,
	0x15, 0x06, 0x69, 0xdc, 0x7e, 0xac, 0xb4, 0x74, 0x2d, 0x42, 0x9f, 0x01, 0x56, 0xbf, 0xa4, 0x8d,
	0xf5, 0xc6, 0x0d, 0x9b, 0xf5, 0xa3, 0xdf, 0xca, 0x99, 0x39, 0x76, 0xb0, 0x90, 0xd8, 0xa7, 0xd5,
	0x54, 0xe2, 0x2d, 0x4d, 0xe1, 0x3a, 0x13, 0xe2, 0xa7, 0xef, 0x67, 0xa4, 0xdb, 0x7b, 0xbc, 0x91,
	0xca, 0x8f, 0xa7, 0x61, 0x30, 0x34, 0x31, 0x17, 0x91, 0xd0, 0xa3, 0x44, 0x68, 0x2e, 0x13, 0x3b,
	0x6c, 0x3b, 0x9f, 0xa0, 0x88, 0x95, 0x96, 0xed, 0xe5, 0x52, 0xd8, 0x89, 0xe4, 0xab, 0x05, 0xb9,
	0xca, 0x61, 0xf8, 0x7f, 0x31, 0xf7, 0x8b, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x18, 0x16,
	0x97, 0x3d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExampleClient is the client API for Example service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExampleClient interface {
	CreateBigFile(ctx context.Context, opts ...grpc.CallOption) (Example_CreateBigFileClient, error)
	GetBigFile(ctx context.Context, in *GetBigFileRequest, opts ...grpc.CallOption) (Example_GetBigFileClient, error)
}

type exampleClient struct {
	cc *grpc.ClientConn
}

func NewExampleClient(cc *grpc.ClientConn) ExampleClient {
	return &exampleClient{cc}
}

func (c *exampleClient) CreateBigFile(ctx context.Context, opts ...grpc.CallOption) (Example_CreateBigFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Example_serviceDesc.Streams[0], "/example.v1.Example/CreateBigFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &exampleCreateBigFileClient{stream}
	return x, nil
}

type Example_CreateBigFileClient interface {
	Send(*CreateBigFileRequest) error
	CloseAndRecv() (*BigFile, error)
	grpc.ClientStream
}

type exampleCreateBigFileClient struct {
	grpc.ClientStream
}

func (x *exampleCreateBigFileClient) Send(m *CreateBigFileRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *exampleCreateBigFileClient) CloseAndRecv() (*BigFile, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(BigFile)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *exampleClient) GetBigFile(ctx context.Context, in *GetBigFileRequest, opts ...grpc.CallOption) (Example_GetBigFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Example_serviceDesc.Streams[1], "/example.v1.Example/GetBigFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &exampleGetBigFileClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Example_GetBigFileClient interface {
	Recv() (*GetBigFileResponse, error)
	grpc.ClientStream
}

type exampleGetBigFileClient struct {
	grpc.ClientStream
}

func (x *exampleGetBigFileClient) Recv() (*GetBigFileResponse, error) {
	m := new(GetBigFileResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ExampleServer is the server API for Example service.
type ExampleServer interface {
	CreateBigFile(Example_CreateBigFileServer) error
	GetBigFile(*GetBigFileRequest, Example_GetBigFileServer) error
}

// UnimplementedExampleServer can be embedded to have forward compatible implementations.
type UnimplementedExampleServer struct {
}

func (*UnimplementedExampleServer) CreateBigFile(srv Example_CreateBigFileServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateBigFile not implemented")
}
func (*UnimplementedExampleServer) GetBigFile(req *GetBigFileRequest, srv Example_GetBigFileServer) error {
	return status.Errorf(codes.Unimplemented, "method GetBigFile not implemented")
}

func RegisterExampleServer(s *grpc.Server, srv ExampleServer) {
	s.RegisterService(&_Example_serviceDesc, srv)
}

func _Example_CreateBigFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ExampleServer).CreateBigFile(&exampleCreateBigFileServer{stream})
}

type Example_CreateBigFileServer interface {
	SendAndClose(*BigFile) error
	Recv() (*CreateBigFileRequest, error)
	grpc.ServerStream
}

type exampleCreateBigFileServer struct {
	grpc.ServerStream
}

func (x *exampleCreateBigFileServer) SendAndClose(m *BigFile) error {
	return x.ServerStream.SendMsg(m)
}

func (x *exampleCreateBigFileServer) Recv() (*CreateBigFileRequest, error) {
	m := new(CreateBigFileRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Example_GetBigFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetBigFileRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ExampleServer).GetBigFile(m, &exampleGetBigFileServer{stream})
}

type Example_GetBigFileServer interface {
	Send(*GetBigFileResponse) error
	grpc.ServerStream
}

type exampleGetBigFileServer struct {
	grpc.ServerStream
}

func (x *exampleGetBigFileServer) Send(m *GetBigFileResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Example_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.v1.Example",
	HandlerType: (*ExampleServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreateBigFile",
			Handler:       _Example_CreateBigFile_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "GetBigFile",
			Handler:       _Example_GetBigFile_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "example/v1/example.proto",
}
